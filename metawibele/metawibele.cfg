[input]
study = my_study_name
metadata = /my/path/for/metadata/file/my_metadata.tsv
sample_list = /my/path/for/sample/list/my_samples.tsv
gene_catalog = /my/path/for/gene_catalog/clusters/my_genecatalogs.clstr
gene_catalog_prot = /my/path/for/gene_catalog/protein/sequences/	my_genecatalogs.centroid.faa
gene_catalog_count = /my/path/for/gene_catalog/reads/counts/my_genecatalogs.counts.all.tsv

[output]
basename = my_output_prefix
working_dir = /my/workding/direcoty/path/

[computation]
# the number of cores that youâ€™re requesting
threads = 10
# the amount of memory (in MB) that you will be using for your job 
memory = 20000

[abundance]
# binning gene catalogs based on co-abundance info and do taxonomic annotation: [config] provide mspminer config file, [no] skip this step
mspminer = configs/MSPminer_setting.cfg 
# the method for normalization: [cpm]:copies per million units (sum to 1 million); [relab]: relative abundance (sum to 1) 
normalize = cpm

[maaslin2]
maaslin2_output = my_maaslin2_output_directory
maaslin2_cmmd = /my/path/Maaslin2/R/Maaslin2.R
min_abundance = 0 
min_prevalence = 0 
max_significance = 0.05
normalization = NONE
transform = LOG
analysis_method = LM
fixed_effects = metadata1,metadata2,metadata3,metadata4
random_effects = metadata5
correction = BH
standardize = TRUE
plot_heatmap = FALSE
heatmap_first_n = FALSE
plot_scatter = FALSE
maaslin2_cores = 10
tshld_prevalence = 0.10
tshld_qvalue = 0.05
effect_size = mean(log)
abundance_detection_level = 0
# specify one main phenotype used for prioritization
phenotype = metadata2
# flag reference status as control for phenotype varibles; use semicolon to seperate variables
flag_ref = "metadata1:control_status1;metadata2:control_status2"
# specify case and control status paries for phenotype variables; use comma to seperate each comparison within the sample variable; use semicolon to seperate variables
case_control_status = "metadata1:case_status1|control_status1; metadata2:case_status2|control_status2,case_status3|control_status2"
